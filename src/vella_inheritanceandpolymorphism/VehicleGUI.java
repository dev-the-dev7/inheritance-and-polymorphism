
package vella_inheritanceandpolymorphism;

import javax.swing.JOptionPane;

/***************************
***Class Name: VehicleGUI
***Author: Devin Vella
****************************
***Purpose: The purpose of this class is to create a tool to add/remove vehicles from inventory, calculated profit and commission 
***for different offers, and to record and manage information of vehicles.  
****************************
***Date: 10/4/2018
****************************/
public class VehicleGUI extends javax.swing.JFrame {
   
    // Declare variables  
    String[][] Vehicle = new String[10][14];
    int vehTyp = 0;
    int askPric = 1;
    int purPric = 2;
    int mak = 3;
    int mod = 4;
    int col = 5;
    int newUse = 6;
    int pass = 7;
    int door = 8;
    int wei = 9;
    int bike = 10;
    int mil = 11;        
    int tow = 12;
    int eng = 13;
      
    int vehnum = 0;
    int vehCount;
    int veh = -1;
    double custOffer;
    double purchasePriceNum;
    double profit;
    double commission;
    String test;
    String newUsedCar;
    String newUsedTruck;
    String newUsedMotor;
    boolean deal;
    
    public VehicleGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane7 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelInventory = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        outputCommission = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        inputOffer = new javax.swing.JTextField();
        outputProfit = new javax.swing.JTextField();
        Calculate = new javax.swing.JButton();
        Prev = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Accept = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        vehicleNum = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        outputVehicleType = new javax.swing.JTextField();
        outputPurchasePrice = new javax.swing.JTextField();
        outputMake = new javax.swing.JTextField();
        outputModel = new javax.swing.JTextField();
        outputColor = new javax.swing.JTextField();
        outputNewUsed = new javax.swing.JTextField();
        outputPassangers = new javax.swing.JTextField();
        outputDoors = new javax.swing.JTextField();
        outputWeight = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        outputBike = new javax.swing.JTextField();
        outputMileage = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        outputEngine = new javax.swing.JTextField();
        outputTowing = new javax.swing.JTextField();
        count = new javax.swing.JLabel();
        outputAskingPrice = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jPanelAddVehicle = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        inputCarMake = new javax.swing.JTextField();
        inputCarModel = new javax.swing.JTextField();
        inputCarPurchasePrice = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        inputCarDoor = new javax.swing.JTextField();
        inputCarColor = new javax.swing.JTextField();
        buttonUsedCar = new javax.swing.JRadioButton();
        inputCarMileage = new javax.swing.JTextField();
        buttonNewCar = new javax.swing.JRadioButton();
        inputCarAskingPrice = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        addCar = new javax.swing.JButton();
        inputCarPassangers = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        inputTruckMake = new javax.swing.JTextField();
        inputTruckModel = new javax.swing.JTextField();
        inputTruckPurchasePrice = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        inputTruckWeight = new javax.swing.JTextField();
        inputTruckColor = new javax.swing.JTextField();
        buttonUsedTruck = new javax.swing.JRadioButton();
        inputTruckTowing = new javax.swing.JTextField();
        buttonNewTruck = new javax.swing.JRadioButton();
        inputTruckAskingPrice = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        addTruck = new javax.swing.JButton();
        inputTruckPassangers = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        inputMotorMake = new javax.swing.JTextField();
        inputMotorModel = new javax.swing.JTextField();
        inputMotorPurchasePrice = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        inputMotorWeight = new javax.swing.JTextField();
        inputMotorColor = new javax.swing.JTextField();
        buttonUsedMotor = new javax.swing.JRadioButton();
        inputMotorEngine = new javax.swing.JTextField();
        buttonNewMotor = new javax.swing.JRadioButton();
        inputMotorAskingPrice = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        addMotor = new javax.swing.JButton();
        inputMotorBike = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        jTabbedPane2.addTab("tab1", jTabbedPane3);

        jTabbedPane5.addTab("tab1", jTabbedPane6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("jLabel1");

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        jTabbedPane7.addTab("tab1", jPanel7);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Calculate"));

        jLabel11.setText("Profit:");

        outputCommission.setEditable(false);

        jLabel6.setText("Offer:");

        outputProfit.setEditable(false);

        Calculate.setText("Calculate Commission");
        Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateActionPerformed(evt);
            }
        });

        Prev.setText("Prev");
        Prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevActionPerformed(evt);
            }
        });

        Next.setText("Next");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        Remove.setLabel("Remove From\n Inventory");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        jLabel7.setText("Commission:");

        Accept.setText("Accept Offer");
        Accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of Vehicles:");

        vehicleNum.setEditable(false);
        vehicleNum.setText("0");

        jLabel17.setText("Max number of Vehicles: 10");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(inputOffer, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(outputCommission, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(outputProfit, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vehicleNum))
                            .addComponent(Remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Calculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Prev)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Next))
                            .addComponent(Accept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputOffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputCommission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(Calculate)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prev)
                    .addComponent(Next))
                .addGap(18, 18, 18)
                .addComponent(Accept, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vehicleNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Vehicles"));

        jLabel3.setText("Type of Vehicle:");

        jLabel4.setText("Purchase Price:");

        jLabel5.setText("Make:");

        jLabel8.setText("Model:");

        jLabel9.setText("Color:");

        jLabel10.setText("Number of Passagers:");

        jLabel12.setText("Number of Doors:");

        jLabel13.setText("Weight:");

        outputVehicleType.setEditable(false);

        outputPurchasePrice.setEditable(false);

        outputMake.setEditable(false);

        outputModel.setEditable(false);

        outputColor.setEditable(false);

        outputNewUsed.setEditable(false);

        outputPassangers.setEditable(false);

        outputDoors.setEditable(false);

        outputWeight.setEditable(false);

        jLabel14.setText("New or Used:");

        jLabel15.setText("Type of Bike:");

        outputBike.setEditable(false);

        outputMileage.setEditable(false);

        jLabel16.setText("Gas Mileage:");

        jLabel20.setText("Towing Capacity:");

        jLabel21.setText("Engine Size:");

        outputEngine.setEditable(false);
        outputEngine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputEngineActionPerformed(evt);
            }
        });

        outputTowing.setEditable(false);

        count.setText("0:0");

        outputAskingPrice.setEditable(false);

        jLabel23.setText("Asking Price:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(72, 374, Short.MAX_VALUE)
                        .addComponent(count))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel10)
                            .addComponent(jLabel4)
                            .addComponent(jLabel23)
                            .addComponent(jLabel3))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(outputPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(outputColor)
                                .addComponent(outputNewUsed)
                                .addComponent(outputModel)
                                .addComponent(outputMake)
                                .addComponent(outputDoors)
                                .addComponent(outputWeight)
                                .addComponent(outputBike)
                                .addComponent(outputMileage)
                                .addComponent(outputEngine)
                                .addComponent(outputPassangers)
                                .addComponent(outputTowing, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(outputAskingPrice))
                            .addComponent(outputVehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(count)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputVehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputNewUsed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputPassangers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDoors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputBike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputTowing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputEngine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanelInventoryLayout = new javax.swing.GroupLayout(jPanelInventory);
        jPanelInventory.setLayout(jPanelInventoryLayout);
        jPanelInventoryLayout.setHorizontalGroup(
            jPanelInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelInventoryLayout.setVerticalGroup(
            jPanelInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane.addTab("Inventory", jPanelInventory);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Car"));

        jLabel43.setText("Model:");

        jLabel46.setText("Number of Doors:");

        jLabel47.setText("Color:");

        buttonGroup1.add(buttonUsedCar);
        buttonUsedCar.setText("Used");
        buttonUsedCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUsedCarActionPerformed(evt);
            }
        });

        buttonGroup1.add(buttonNewCar);
        buttonNewCar.setText("New");
        buttonNewCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewCarActionPerformed(evt);
            }
        });

        jLabel24.setText("Asking Price:");

        jLabel44.setText("Purchase Price:");

        jLabel42.setText("Make:");

        addCar.setText("Add Car");
        addCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarActionPerformed(evt);
            }
        });

        jLabel45.setText("Number of Passangers:");

        jLabel19.setText("Gas Mileage:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCarPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputCarMake, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCarAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCarPassangers, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCarColor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputCarDoor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputCarMileage, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(buttonNewCar)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUsedCar)))))
                .addGap(24, 24, 24))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCarDoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputCarPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44)))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCarAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCarMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42)
                            .addComponent(inputCarPassangers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCarMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCarColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonUsedCar)
                            .addComponent(buttonNewCar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addCar)
                        .addGap(0, 9, Short.MAX_VALUE))))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Truck"));

        jLabel48.setText("Model:");

        jLabel49.setText("Weight:");

        jLabel50.setText("Color:");

        buttonGroup2.add(buttonUsedTruck);
        buttonUsedTruck.setText("Used");
        buttonUsedTruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUsedTruckActionPerformed(evt);
            }
        });

        buttonGroup2.add(buttonNewTruck);
        buttonNewTruck.setText("New");
        buttonNewTruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewTruckActionPerformed(evt);
            }
        });

        jLabel25.setText("Asking Price:");

        jLabel51.setText("Purchase Price:");

        jLabel52.setText("Make:");

        addTruck.setText("Add Truck");
        addTruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTruckActionPerformed(evt);
            }
        });

        jLabel53.setText("Number of Passangers:");

        jLabel26.setText("Towing Capacity:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTruckPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel52))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputTruckMake, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputTruckAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTruckPassangers, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTruckColor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTruckModel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputTruckWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputTruckTowing, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addTruck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(buttonNewTruck)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUsedTruck)))))
                .addGap(24, 24, 24))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputTruckWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputTruckModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputTruckPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel51)))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputTruckAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputTruckMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52)
                            .addComponent(inputTruckPassangers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputTruckTowing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputTruckColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonUsedTruck)
                            .addComponent(buttonNewTruck))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addTruck)
                        .addContainerGap())))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Motorcycle"));

        jLabel54.setText("Model:");

        jLabel55.setText("Weight:");

        jLabel56.setText("Color:");

        buttonGroup3.add(buttonUsedMotor);
        buttonUsedMotor.setText("Used");
        buttonUsedMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUsedMotorActionPerformed(evt);
            }
        });

        buttonGroup3.add(buttonNewMotor);
        buttonNewMotor.setText("New");
        buttonNewMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewMotorActionPerformed(evt);
            }
        });

        jLabel27.setText("Asking Price:");

        jLabel57.setText("Purchase Price:");

        jLabel58.setText("Make:");

        addMotor.setText("Add Motorcycle");
        addMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMotorActionPerformed(evt);
            }
        });

        jLabel59.setText("Type of Bike:");

        jLabel28.setText("Engine Size:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel58)
                    .addComponent(jLabel27)
                    .addComponent(jLabel57))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputMotorPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputMotorAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputMotorMake, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputMotorBike, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputMotorColor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputMotorModel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                            .addComponent(jLabel55)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputMotorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                            .addComponent(jLabel28)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputMotorEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(buttonNewMotor)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUsedMotor)))))
                .addGap(24, 24, 24))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputMotorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel55))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputMotorModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputMotorPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel57)))
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputMotorAskingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputMotorMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58)
                            .addComponent(inputMotorBike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputMotorEngine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputMotorColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonUsedMotor)
                            .addComponent(buttonNewMotor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addMotor)
                        .addGap(0, 23, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanelAddVehicleLayout = new javax.swing.GroupLayout(jPanelAddVehicle);
        jPanelAddVehicle.setLayout(jPanelAddVehicleLayout);
        jPanelAddVehicleLayout.setHorizontalGroup(
            jPanelAddVehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddVehicleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAddVehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelAddVehicleLayout.setVerticalGroup(
            jPanelAddVehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddVehicleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Add Vehicle", jPanelAddVehicle);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void outputEngineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputEngineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputEngineActionPerformed

    private void addCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCarActionPerformed
        
        //only run if the number of vehicles did not reach the limit 
        if(vehCount < 10)
        {
            if(!("".equals(inputCarMake.getText()) | "".equals(inputCarModel.getText()) | "".equals(inputCarColor.getText()) | "".equals(newUsedCar)))
            {
                try
                {
                    //create new object for Car
                    Car myCar = new Car(inputCarMake.getText(),
                    inputCarModel.getText(),
                    inputCarColor.getText(),
                    newUsedCar,        
                    Integer.parseInt(inputCarPurchasePrice.getText()),
                    Integer.parseInt(inputCarAskingPrice.getText()),
                    Integer.parseInt(inputCarPassangers.getText()),
                    Integer.parseInt(inputCarDoor.getText()),
                    Integer.parseInt(inputCarMileage.getText()));

                    //get vehCount
                    vehCount = myCar.vehCountAdd(vehCount);

                    //increment index and vehicle number
                    veh++;
                    vehnum++;           

                    //Display counter
                    count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
                    vehicleNum.setText(String.valueOf(vehCount));

                    //Display new vehicle information
                    outputVehicleType.setText("Car");
                    outputPurchasePrice.setText(String.valueOf(myCar.getPurchasePrice()));
                    outputAskingPrice.setText(String.valueOf(myCar.getAskingPrice()));
                    outputMake.setText(myCar.getMake());
                    outputModel.setText(myCar.getModel());
                    outputColor.setText(myCar.getColor());
                    outputNewUsed.setText(newUsedCar);
                    outputPassangers.setText(String.valueOf(myCar.getNumPassangers()));
                    outputDoors.setText(String.valueOf(myCar.getNumDoors()));
                    outputWeight.setText("n/a");
                    outputBike.setText("n/a");
                    outputMileage.setText(String.valueOf(myCar.getMileage()));
                    outputTowing.setText("n/a");
                    outputEngine.setText("n/a");

                    //Record data for vehicle in array
                    Vehicle[veh][vehTyp] = outputVehicleType.getText();
                    Vehicle[veh][purPric] = outputPurchasePrice.getText();
                    Vehicle[veh][askPric] = outputAskingPrice.getText();
                    Vehicle[veh][mak] = outputMake.getText();
                    Vehicle[veh][mod] = outputModel.getText();
                    Vehicle[veh][col] = outputColor.getText();
                    Vehicle[veh][newUse] = outputNewUsed.getText();
                    Vehicle[veh][pass] = outputPassangers.getText();
                    Vehicle[veh][door] = outputDoors.getText();
                    Vehicle[veh][wei] = outputWeight.getText();
                    Vehicle[veh][bike] = outputBike.getText();
                    Vehicle[veh][mil] = outputMileage.getText();
                    Vehicle[veh][tow] = outputTowing.getText();
                    Vehicle[veh][eng] = outputEngine.getText();

                    //switch to inventory tab
                    jTabbedPane.setSelectedIndex(0);    
            
                    //clear input text fields
                    inputCarPurchasePrice.setText(null);
                    inputCarAskingPrice.setText(null);
                    inputCarMake.setText(null);
                    inputCarModel.setText(null);
                    inputCarColor.setText(null);
                    inputCarPassangers.setText(null);
                    inputCarDoor.setText(null);
                    inputCarMileage.setText(null);
                }
                catch(NumberFormatException e)
                {
                    //Display error message
                    JOptionPane.showMessageDialog(null, "Wrong data type was entered.");
                }
            }
            else
            {
                //Display error message
                JOptionPane.showMessageDialog(null, "Please fill out all fields before trying to add a vehicle.");
            }
        }
        else
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "You have reached the max number of vehicles.");
        }
    }//GEN-LAST:event_addCarActionPerformed

    private void CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateActionPerformed
 
        try
        {
            //create new object for Car to call methods
            Car myCar = new Car("",
            "",
            "",
            "",        
            0,
            0,
            0,
            0,
            0); 

            //get values to calculate profit
            custOffer = Integer.parseInt(inputOffer.getText());
            purchasePriceNum = Integer.parseInt(outputPurchasePrice.getText());

            //get deal
            deal = myCar.deal(custOffer, purchasePriceNum);

            if(deal == true)
            { 
                //set test to current vehicle type
                test = outputVehicleType.getText();            

                //get profit
                profit = myCar.calculateProfit(custOffer, purchasePriceNum);

                //get commission
                commission = myCar.calculateCommission(profit, test);

                //display profit and commission
                outputProfit.setText(String.valueOf(java.text.NumberFormat.getCurrencyInstance().format(profit)));
                outputCommission.setText(String.valueOf(java.text.NumberFormat.getCurrencyInstance().format(commission)));
            }
            else
            {
                //Display error message
                JOptionPane.showMessageDialog(null, "You will will not make a profit.");
            }            
        }
        catch(NumberFormatException e)
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "Either there are no vehicles in inventroy or no offer was entered.");
        }
    }//GEN-LAST:event_CalculateActionPerformed

    private void PrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrevActionPerformed
        
        //only run if the vehicle number is greater than 1
        if(vehnum > 1)
        {
            //decrease index and vehicle number
            vehnum--;
            veh--;
            
            //Display counter
            count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
            
            //display previous vehicle's information
            outputVehicleType.setText(Vehicle[veh][vehTyp]);
            outputPurchasePrice.setText(Vehicle[veh][purPric]);
            outputAskingPrice.setText(Vehicle[veh][askPric]);
            outputMake.setText(Vehicle[veh][mak]);
            outputModel.setText(Vehicle[veh][mod]);
            outputColor.setText(Vehicle[veh][col]);
            outputNewUsed.setText(Vehicle[veh][newUse]);
            outputPassangers.setText(Vehicle[veh][pass]);
            outputDoors.setText(Vehicle[veh][door]);
            outputWeight.setText(Vehicle[veh][wei]);
            outputBike.setText(Vehicle[veh][bike]);
            outputMileage.setText(Vehicle[veh][mil]);
            outputTowing.setText(Vehicle[veh][tow]);
            outputEngine.setText(Vehicle[veh][eng]);
        }
    }//GEN-LAST:event_PrevActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        
        //only run if the vehicle number is less than 10 and if the number of vehicles is greater than 1
        if(vehnum < vehCount)
        {
            //increment index and vehicle number
            vehnum++;
            veh++;
            
            //Display counter
            count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
            
            //display next vehicle's information
            outputVehicleType.setText(Vehicle[veh][vehTyp]);
            outputPurchasePrice.setText(Vehicle[veh][purPric]);
            outputAskingPrice.setText(Vehicle[veh][askPric]);
            outputMake.setText(Vehicle[veh][mak]);
            outputModel.setText(Vehicle[veh][mod]);
            outputColor.setText(Vehicle[veh][col]);
            outputNewUsed.setText(Vehicle[veh][newUse]);
            outputPassangers.setText(Vehicle[veh][pass]);
            outputDoors.setText(Vehicle[veh][door]);
            outputWeight.setText(Vehicle[veh][wei]);
            outputBike.setText(Vehicle[veh][bike]);
            outputMileage.setText(Vehicle[veh][mil]);
            outputTowing.setText(Vehicle[veh][tow]);
            outputEngine.setText(Vehicle[veh][eng]);         
        }
    }//GEN-LAST:event_NextActionPerformed

    private void AcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptActionPerformed
        
        //only run of they have a vehicle in inventory
        if(vehCount != 0)
        {  
            //erase vehicle information from Vehicle array
            Vehicle[veh][vehTyp] = null;
            Vehicle[veh][purPric] = null;
            Vehicle[veh][askPric] = null;
            Vehicle[veh][mak] = null;
            Vehicle[veh][mod] = null;
            Vehicle[veh][col] = null;
            Vehicle[veh][newUse] = null;
            Vehicle[veh][pass] = null;
            Vehicle[veh][door] = null;
            Vehicle[veh][wei] = null;
            Vehicle[veh][bike] = null;
            Vehicle[veh][mil] = null;
            Vehicle[veh][tow] = null;
            Vehicle[veh][eng] = null;
 
            //create new object for Car to call method
            Car myCar = new Car("",
            "",
            "",
            "",        
            0,
            0,
            0,
            0,
            0); 
            
            if(vehCount == 1)
            {
                //get vehCount
                vehCount = myCar.vehCountSubtract(vehCount);
                
                //display no information because there are no vehicles in inventory
                outputVehicleType.setText("");
                outputPurchasePrice.setText("");
                outputAskingPrice.setText("");
                outputMake.setText("");
                outputModel.setText("");
                outputColor.setText("");
                outputNewUsed.setText("");
                outputPassangers.setText("");
                outputDoors.setText("");
                outputWeight.setText("");
                outputBike.setText("");
                outputMileage.setText("");
                outputTowing.setText("");
                outputEngine.setText("");
            }
            else
            {
                //get vehCount
                vehCount = myCar.vehCountSubtract(vehCount);

                if(veh != 0)
                {
                    //decrease index of array and vehicle number
                    veh--;
                    vehnum--;
                    
                    //display previous vehicle information if index does not equal 0
                    outputVehicleType.setText(Vehicle[veh][vehTyp]);
                    outputPurchasePrice.setText(Vehicle[veh][purPric]);
                    outputAskingPrice.setText(Vehicle[veh][askPric]);
                    outputMake.setText(Vehicle[veh][mak]);
                    outputModel.setText(Vehicle[veh][mod]);
                    outputColor.setText(Vehicle[veh][col]);
                    outputNewUsed.setText(Vehicle[veh][newUse]);
                    outputPassangers.setText(Vehicle[veh][pass]);
                    outputDoors.setText(Vehicle[veh][door]);
                    outputWeight.setText(Vehicle[veh][wei]);
                    outputBike.setText(Vehicle[veh][bike]);
                    outputMileage.setText(Vehicle[veh][mil]);
                    outputTowing.setText(Vehicle[veh][tow]);
                    outputEngine.setText(Vehicle[veh][eng]);
                }
                else
                {
                    //increase index of array
                    veh++;
                    
                    //display next vehicle information if index equals 0
                    outputVehicleType.setText(Vehicle[veh][vehTyp]);
                    outputPurchasePrice.setText(Vehicle[veh][purPric]);
                    outputAskingPrice.setText(Vehicle[veh][askPric]);
                    outputMake.setText(Vehicle[veh][mak]);
                    outputModel.setText(Vehicle[veh][mod]);
                    outputColor.setText(Vehicle[veh][col]);
                    outputNewUsed.setText(Vehicle[veh][newUse]);
                    outputPassangers.setText(Vehicle[veh][pass]);
                    outputDoors.setText(Vehicle[veh][door]);
                    outputWeight.setText(Vehicle[veh][wei]);
                    outputBike.setText(Vehicle[veh][bike]);
                    outputMileage.setText(Vehicle[veh][mil]);
                    outputTowing.setText(Vehicle[veh][tow]);
                    outputEngine.setText(Vehicle[veh][eng]);
                }
            }
            
            if(vehCount == 0)
            {
                //decrease vehicle number
                vehnum--;
            }
            
            //Display counter
            count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
            vehicleNum.setText(String.valueOf(vehCount));
        }
        else
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "There are no vehicles to remove.");
        }
    }//GEN-LAST:event_AcceptActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        
        //only run of they have a vehicle in inventory
        if(vehCount != 0)
        {  
            //erase vehicle information from Vehicle array
            Vehicle[veh][vehTyp] = null;
            Vehicle[veh][purPric] = null;
            Vehicle[veh][askPric] = null;
            Vehicle[veh][mak] = null;
            Vehicle[veh][mod] = null;
            Vehicle[veh][col] = null;
            Vehicle[veh][newUse] = null;
            Vehicle[veh][pass] = null;
            Vehicle[veh][door] = null;
            Vehicle[veh][wei] = null;
            Vehicle[veh][bike] = null;
            Vehicle[veh][mil] = null;
            Vehicle[veh][tow] = null;
            Vehicle[veh][eng] = null;
 
            //create new object for Car to call method
            Car myCar = new Car("",
            "",
            "",
            "",        
            0,
            0,
            0,
            0,
            0); 
            
            if(vehCount == 1)
            {
                //get vehCount
                vehCount = myCar.vehCountSubtract(vehCount);
                
                //display no information because there are no vehicles in inventory
                outputVehicleType.setText("");
                outputPurchasePrice.setText("");
                outputAskingPrice.setText("");
                outputMake.setText("");
                outputModel.setText("");
                outputColor.setText("");
                outputNewUsed.setText("");
                outputPassangers.setText("");
                outputDoors.setText("");
                outputWeight.setText("");
                outputBike.setText("");
                outputMileage.setText("");
                outputTowing.setText("");
                outputEngine.setText("");
            }
            else
            {
                //get vehCount
                vehCount = myCar.vehCountSubtract(vehCount);

                if(veh != 0)
                {
                    //decrease index of array and vehicle number
                    veh--;
                    vehnum--;
                    
                    //display previous vehicle information if index does not equal 0
                    outputVehicleType.setText(Vehicle[veh][vehTyp]);
                    outputPurchasePrice.setText(Vehicle[veh][purPric]);
                    outputAskingPrice.setText(Vehicle[veh][askPric]);
                    outputMake.setText(Vehicle[veh][mak]);
                    outputModel.setText(Vehicle[veh][mod]);
                    outputColor.setText(Vehicle[veh][col]);
                    outputNewUsed.setText(Vehicle[veh][newUse]);
                    outputPassangers.setText(Vehicle[veh][pass]);
                    outputDoors.setText(Vehicle[veh][door]);
                    outputWeight.setText(Vehicle[veh][wei]);
                    outputBike.setText(Vehicle[veh][bike]);
                    outputMileage.setText(Vehicle[veh][mil]);
                    outputTowing.setText(Vehicle[veh][tow]);
                    outputEngine.setText(Vehicle[veh][eng]);
                }
                else
                {
                    //increase index of array
                    veh++;
                    
                    //display next vehicle information if index equals 0
                    outputVehicleType.setText(Vehicle[veh][vehTyp]);
                    outputPurchasePrice.setText(Vehicle[veh][purPric]);
                    outputAskingPrice.setText(Vehicle[veh][askPric]);
                    outputMake.setText(Vehicle[veh][mak]);
                    outputModel.setText(Vehicle[veh][mod]);
                    outputColor.setText(Vehicle[veh][col]);
                    outputNewUsed.setText(Vehicle[veh][newUse]);
                    outputPassangers.setText(Vehicle[veh][pass]);
                    outputDoors.setText(Vehicle[veh][door]);
                    outputWeight.setText(Vehicle[veh][wei]);
                    outputBike.setText(Vehicle[veh][bike]);
                    outputMileage.setText(Vehicle[veh][mil]);
                    outputTowing.setText(Vehicle[veh][tow]);
                    outputEngine.setText(Vehicle[veh][eng]);
                }
            }
            
            if(vehCount == 0)
            {
                //decrease vehicle number
                vehnum--;
            }
            
            //Display counter
            count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
            vehicleNum.setText(String.valueOf(vehCount));
        }
        else
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "There are no vehicles to remove.");
        }
    }//GEN-LAST:event_RemoveActionPerformed

    private void addTruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTruckActionPerformed
        
        //only run if the number of vehicles did not reach the limit 
        if(vehCount < 10)
        {
            if(!("".equals(inputTruckMake.getText()) | "".equals(inputTruckModel.getText()) | "".equals(inputTruckColor.getText()) | "".equals(newUsedTruck)))
            {
                try
                {
                    //create new object for Car
                    Truck myTruck = new Truck(inputTruckMake.getText(),
                    inputTruckModel.getText(),
                    inputTruckColor.getText(),
                    newUsedTruck,         
                    Integer.parseInt(inputTruckPurchasePrice.getText()),
                    Integer.parseInt(inputTruckAskingPrice.getText()),
                    Integer.parseInt(inputTruckPassangers.getText()),
                    Integer.parseInt(inputTruckWeight.getText()),
                    Integer.parseInt(inputTruckTowing.getText()));

                    //get vehCount
                    vehCount = myTruck.vehCountAdd(vehCount);

                    //increment index and vehicle number
                    veh++;
                    vehnum++;

                    //Display counter
                    count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
                    vehicleNum.setText(String.valueOf(vehCount));

                    //Display new vehicle information
                    outputVehicleType.setText("Truck");
                    outputPurchasePrice.setText(String.valueOf(myTruck.getPurchasePrice()));
                    outputAskingPrice.setText(String.valueOf(myTruck.getAskingPrice()));
                    outputMake.setText(myTruck.getMake());
                    outputModel.setText(myTruck.getModel());
                    outputColor.setText(myTruck.getColor());
                    outputNewUsed.setText(newUsedTruck);
                    outputPassangers.setText("n/a");
                    outputDoors.setText("n/a");
                    outputWeight.setText(String.valueOf(myTruck.getWeight()));
                    outputBike.setText("n/a");
                    outputMileage.setText("n/a");
                    outputTowing.setText(String.valueOf(myTruck.getTowingCapacity()));
                    outputEngine.setText("n/a");

                    //Record data for vehicle in array
                    Vehicle[veh][vehTyp] = outputVehicleType.getText();
                    Vehicle[veh][purPric] = outputPurchasePrice.getText();
                    Vehicle[veh][askPric] = outputAskingPrice.getText();
                    Vehicle[veh][mak] = outputMake.getText();
                    Vehicle[veh][mod] = outputModel.getText();
                    Vehicle[veh][col] = outputColor.getText();
                    Vehicle[veh][newUse] = outputNewUsed.getText();
                    Vehicle[veh][pass] = outputPassangers.getText();
                    Vehicle[veh][door] = outputDoors.getText();
                    Vehicle[veh][wei] = outputWeight.getText();
                    Vehicle[veh][bike] = outputBike.getText();
                    Vehicle[veh][mil] = outputMileage.getText();
                    Vehicle[veh][tow] = outputTowing.getText();
                    Vehicle[veh][eng] = outputEngine.getText();

                    //switch to inventory tab
                    jTabbedPane.setSelectedIndex(0);

                    //clear input text fields
                    inputTruckPurchasePrice.setText(null);
                    inputTruckAskingPrice.setText(null);
                    inputTruckMake.setText(null);
                    inputTruckModel.setText(null);
                    inputTruckColor.setText(null);
                    inputTruckPassangers.setText(null);
                    inputTruckWeight.setText(null);
                    inputTruckTowing.setText(null);
                }
                catch(NumberFormatException e)
                {
                    //Display error message
                    JOptionPane.showMessageDialog(null, "Wrong data type was entered.");
                }
            }
            else
            {
                //Display error message
                JOptionPane.showMessageDialog(null, "Please fill out all fields before trying to add a vehicle.");
            }
        }
        else
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "You have reached the max number of Vehicles");
        }
    }//GEN-LAST:event_addTruckActionPerformed

    private void addMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMotorActionPerformed
        //only run if the number of vehicles did not reach the limit 
        if(vehCount < 10)
        {
            if(!("".equals(inputMotorMake.getText()) | "".equals(inputMotorModel.getText()) | "".equals(inputMotorColor.getText()) | "".equals(newUsedMotor)))
            {
                try
                {
                    //create new object for Car
                    Motorcycle myMotorcycle = new Motorcycle(inputMotorMake.getText(),
                    inputMotorModel.getText(),
                    inputMotorColor.getText(),
                    newUsedMotor,         
                    Integer.parseInt(inputMotorPurchasePrice.getText()),
                    Integer.parseInt(inputMotorAskingPrice.getText()),
                    inputMotorBike.getText(),
                    Integer.parseInt(inputMotorWeight.getText()),
                    Integer.parseInt(inputMotorEngine.getText()));

                    //get vehCount
                    vehCount = myMotorcycle.vehCountAdd(vehCount);

                    //increment index and vehicle number
                    veh++;
                    vehnum++;

                    //Display counter
                    count.setText(String.valueOf(vehnum) + ":" + String.valueOf(vehCount));
                    vehicleNum.setText(String.valueOf(vehCount));

                    //Display new vehicle information
                    outputVehicleType.setText("Motorcycle");
                    outputPurchasePrice.setText(String.valueOf(myMotorcycle.getPurchasePrice()));
                    outputAskingPrice.setText(String.valueOf(myMotorcycle.getAskingPrice()));
                    outputMake.setText(myMotorcycle.getMake());
                    outputModel.setText(myMotorcycle.getModel());
                    outputColor.setText(myMotorcycle.getColor());
                    outputNewUsed.setText(newUsedMotor);
                    outputPassangers.setText("n/a");
                    outputDoors.setText("n/a");
                    outputWeight.setText(String.valueOf(myMotorcycle.getWeight()));
                    outputBike.setText(myMotorcycle.getBike());
                    outputMileage.setText("n/a");
                    outputTowing.setText("n/a");
                    outputEngine.setText(String.valueOf(myMotorcycle.getEngine()));

                    //Record data for vehicle in array
                    Vehicle[veh][vehTyp] = outputVehicleType.getText();
                    Vehicle[veh][purPric] = outputPurchasePrice.getText();
                    Vehicle[veh][askPric] = outputAskingPrice.getText();
                    Vehicle[veh][mak] = outputMake.getText();
                    Vehicle[veh][mod] = outputModel.getText();
                    Vehicle[veh][col] = outputColor.getText();
                    Vehicle[veh][newUse] = outputNewUsed.getText();
                    Vehicle[veh][pass] = outputPassangers.getText();
                    Vehicle[veh][door] = outputDoors.getText();
                    Vehicle[veh][wei] = outputWeight.getText();
                    Vehicle[veh][bike] = outputBike.getText();
                    Vehicle[veh][mil] = outputMileage.getText();
                    Vehicle[veh][tow] = outputTowing.getText();
                    Vehicle[veh][eng] = outputEngine.getText();

                    //switch to inventory tab
                    jTabbedPane.setSelectedIndex(0);   

                    //clear input text fields
                    inputMotorPurchasePrice.setText(null);
                    inputMotorAskingPrice.setText(null);
                    inputMotorMake.setText(null);
                    inputMotorModel.setText(null);
                    inputMotorColor.setText(null);
                    inputMotorBike.setText(null);
                    inputMotorWeight.setText(null);
                    inputMotorEngine.setText(null);    
                }
                catch(NumberFormatException e)
                {
                    //Display error message
                    JOptionPane.showMessageDialog(null, "Wrong data type was entered.");
                }
            }
            else
            {
                //Display error message
                JOptionPane.showMessageDialog(null, "Please fill out all fields before trying to add a vehicle.");
            }    
        }
        else
        {
            //Display error message
            JOptionPane.showMessageDialog(null, "You have reached the max number of vehicles");
        }
    }//GEN-LAST:event_addMotorActionPerformed

    private void buttonNewCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewCarActionPerformed
        newUsedCar = "New";
    }//GEN-LAST:event_buttonNewCarActionPerformed

    private void buttonUsedCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUsedCarActionPerformed
        newUsedCar = "Used";
    }//GEN-LAST:event_buttonUsedCarActionPerformed

    private void buttonNewTruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewTruckActionPerformed
        newUsedTruck = "New";
    }//GEN-LAST:event_buttonNewTruckActionPerformed

    private void buttonUsedTruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUsedTruckActionPerformed
        newUsedTruck = "Used";
    }//GEN-LAST:event_buttonUsedTruckActionPerformed

    private void buttonNewMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewMotorActionPerformed
        newUsedMotor = "New";
    }//GEN-LAST:event_buttonNewMotorActionPerformed

    private void buttonUsedMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUsedMotorActionPerformed
        newUsedMotor = "Used";
    }//GEN-LAST:event_buttonUsedMotorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Accept;
    private javax.swing.JButton Calculate;
    private javax.swing.JButton Next;
    private javax.swing.JButton Prev;
    private javax.swing.JButton Remove;
    private javax.swing.JButton addCar;
    private javax.swing.JButton addMotor;
    private javax.swing.JButton addTruck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JRadioButton buttonNewCar;
    private javax.swing.JRadioButton buttonNewMotor;
    private javax.swing.JRadioButton buttonNewTruck;
    private javax.swing.JRadioButton buttonUsedCar;
    private javax.swing.JRadioButton buttonUsedMotor;
    private javax.swing.JRadioButton buttonUsedTruck;
    private javax.swing.JLabel count;
    protected javax.swing.JTextField inputCarAskingPrice;
    protected javax.swing.JTextField inputCarColor;
    protected javax.swing.JTextField inputCarDoor;
    protected javax.swing.JTextField inputCarMake;
    protected javax.swing.JTextField inputCarMileage;
    protected javax.swing.JTextField inputCarModel;
    protected javax.swing.JTextField inputCarPassangers;
    protected javax.swing.JTextField inputCarPurchasePrice;
    protected javax.swing.JTextField inputMotorAskingPrice;
    protected javax.swing.JTextField inputMotorBike;
    protected javax.swing.JTextField inputMotorColor;
    protected javax.swing.JTextField inputMotorEngine;
    protected javax.swing.JTextField inputMotorMake;
    protected javax.swing.JTextField inputMotorModel;
    protected javax.swing.JTextField inputMotorPurchasePrice;
    protected javax.swing.JTextField inputMotorWeight;
    private javax.swing.JTextField inputOffer;
    protected javax.swing.JTextField inputTruckAskingPrice;
    protected javax.swing.JTextField inputTruckColor;
    protected javax.swing.JTextField inputTruckMake;
    protected javax.swing.JTextField inputTruckModel;
    protected javax.swing.JTextField inputTruckPassangers;
    protected javax.swing.JTextField inputTruckPurchasePrice;
    protected javax.swing.JTextField inputTruckTowing;
    protected javax.swing.JTextField inputTruckWeight;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelAddVehicle;
    private javax.swing.JPanel jPanelInventory;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTabbedPane jTabbedPane7;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField outputAskingPrice;
    private javax.swing.JTextField outputBike;
    private javax.swing.JTextField outputColor;
    private javax.swing.JTextField outputCommission;
    private javax.swing.JTextField outputDoors;
    private javax.swing.JTextField outputEngine;
    private javax.swing.JTextField outputMake;
    private javax.swing.JTextField outputMileage;
    private javax.swing.JTextField outputModel;
    private javax.swing.JTextField outputNewUsed;
    private javax.swing.JTextField outputPassangers;
    private javax.swing.JTextField outputProfit;
    private javax.swing.JTextField outputPurchasePrice;
    private javax.swing.JTextField outputTowing;
    protected javax.swing.JTextField outputVehicleType;
    private javax.swing.JTextField outputWeight;
    private javax.swing.JTextField vehicleNum;
    // End of variables declaration//GEN-END:variables
}